<!DOCTYPE html>
<html>

<head>
  <title>New Sails App</title>
  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <%/* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
  <%/* <meta name="robots" content="noindex"> */%>


  <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

  <!--STYLES-->
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.bootstrap.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.bootstrap.min.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.bootstrap4.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.bootstrap4.min.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.foundation.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.foundation.min.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.jqueryui.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.jqueryui.min.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.semanticui.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/dataTables.semanticui.min.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/jquery.dataTables.css">
  <link rel="stylesheet" href="/dependencies/datatables/DataTables-1.10.20/css/jquery.dataTables.min.css">
  <link rel="stylesheet" href="/dependencies/datatables/datatables.css">
  <link rel="stylesheet" href="/styles/bootstrap.min.css">
  <link rel="stylesheet" href="/styles/shards-dashboards.1.1.0.min.css">
  <link rel="stylesheet" href="/styles/style.css">
  <!--STYLES END-->
</head>

<body>
  <%- body %>



  <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

  <!--TEMPLATES-->
  
  <!--TEMPLATES END-->


  <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


  <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

  <!--SCRIPTS-->
  <script src="/dependencies/sails.io.js"></script>
  <script src="/dependencies/jquery.min.js"></script>
  <script src="/dependencies/axios.min.js"></script>
  <script src="/dependencies/bootstrap/bootstrap.min.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.bootstrap.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.bootstrap.min.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.bootstrap4.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.bootstrap4.min.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.foundation.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.foundation.min.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.jqueryui.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.jqueryui.min.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.semanticui.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/dataTables.semanticui.min.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/jquery.dataTables.js"></script>
  <script src="/dependencies/datatables/DataTables-1.10.20/js/jquery.dataTables.min.js"></script>
  <script src="/dependencies/datatables/datatables.min.js"></script>
  <script src="/dependencies/js.cookie.js"></script>
  <script src="/js/init-popover.js"></script>
  <!--SCRIPTS END-->
  <% if(sails.config.environment == 'development' ){ %>     <script src="http://localhost:35729/livereload.js"></script> <% } %>
</body>

</html>